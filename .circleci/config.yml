version: 2.1
orbs:
  node: circleci/node@1.1.6
jobs:
  build-test-deploy:
    executor:
      name: node/default
    steps:
      - checkout
      - node/with-cache:
          steps:
            - run: cd front-end && npm install
            - run: cd front-end && npm install --only=dev
            - run: cd front-end && npm run build
            - run: rm -Rf server/dist
            - run: cp -r front-end/dist server/dist
            - run: cd server && npm install
            - run: cd server && npm test
            - store_artifacts:
                path: server/coverage
            - run:
                command: |
                    if [[ $(command -v cc-test-reporter) == "" ]]; then
                        if which sudo > /dev/null; then
                          sudo curl -s -o /usr/local/bin/cc-test-reporter -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
                          sudo chmod +x /usr/local/bin/cc-test-reporter
                        else
                          curl -s -o /usr/local/bin/cc-test-reporter -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
                          chmod +x /usr/local/bin/cc-test-reporter
                        fi
                      else
                        echo "Test reporter is already installed."
                      fi
                name: Downloading Code Climate test reporter
            - run:
                command: cc-test-reporter format-coverage "server/coverage/clover.xml" --input-type clover --output "server/coverage/codeclimate.json"
                name: Formatting coverage report
            - run:
                command: cc-test-reporter upload-coverage --input "server/coverage/codeclimate.json"
                name: Uploading coverage report
            - run: git config user.email "bomar@andrew.cmu.edu"
            - run: git config user.name "Bassam Omar"
            - run: git add -f server/dist && git commit -m "include dist folder"
            - run: git push -f https://heroku:${HEROKU_API_KEY}@git.heroku.com/${HEROKU_APP_NAME}.git master:master

workflows:
  build-test-deploy:
    jobs:
      - build-test-deploy
